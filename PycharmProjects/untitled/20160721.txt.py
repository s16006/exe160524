# 気になるモジュールを１０個要約で書き、それを何に使えるかを考察、予想。　githubにアド込みプッシュ。
"""
1.textwrap.dedent(text)
text の各行に対し、共通して現れる先頭の空白を削除します。
この関数は通常、三重引用符で囲われた文字列をスクリーン/その他の左端にそろえ、
なおかつソースコード中ではインデントされた形式を損なわないようにするために使われます。
タブとスペースはともにホワイトスペースとして扱われますが、同じではないことに注意。

* 見やすくていいと思います。

2.textwrap.indent(text, prefix, predicate=None)
text の中の選択された行の先頭に prefix を追加します。
行の分割は text.splitlines(True)
省略可能な predicate 引数を使って、どの行をインデントするかを制御できる。

wrap:1段落の文字列 text を、各行が width 文字以下になるように wrap します。
オプションは TextWrapper インスタンスの属性から取得します。結果の、行末に改行のない行のリストを返します。
出力の内容が空になる場合は、返すリストも空になります。

* 省略コマンドでいいですね。

３.re - 正規表現操作
このモジュールは、Perl などと同様の正規表現マッチング操作を提供しています。
正規表現では、特殊文字の持つ特別な意味を呼び出さずにその特殊な文字を使えるようにするために、バックスラッシュ文字 ('\') を使います。
表現にマッチ (match) する文字列の集合を表しています。このモジュールの関数を使えば、ある文字列が指定の正規表現にマッチするか を検査できます。

* 正規表現を示すのに使えます。

４．copy.copy(x)　copy.deepcopy(x)
copy.の場合、x の浅い (shallow) コピーを返します。 deepcopy.の場合、x の深い (deep) コピーを返します。
deep copy、新たな複合オブジェクトを作成し、その後元のオブジェクト中に見つかったオブジェクトの コピー を挿入します。
shallow copy、新たな複合オブジェクトを作成し、その後 (可能な限り) 元のオブジェクト中に見つかったオブジェクトに対する
浅い (shallow) コピーと深い (deep) コピーの違いが関係するのは、複合オブジェクトだけです。

* オブジェクトのコピーで使用。

５．pprint データ出力の整然化
Pythonの任意のデータ構造をインタープリタへの入力で使われる形式にして “pretty-print” できます。
表示できないのは、ファイル、ソケット、あるいはクラスのようなオブジェクトや、
その他Pythonのリテラルとして表現できない様々なオブジェクトが含まれていた場合です。

* 　class pprint.PrettyPrinterで出力幅の指定が行える。

６．zlib gzip互換の圧縮
データ圧縮を必要とするアプリケーションが zlib ライブラリを使って圧縮および展開を行えるようにします。
zlib.compress：data で与えられたバイト列を圧縮し、圧縮されたデータを含むバイト列オブジェクトを返します。

*　データの圧縮で主に使用される。データ転送がコンパクトにできることに期待。

７．stat - stat()の結果を解釈する。
os.stat() 、 os.lstat() 、および os.fstat() が存在する場合に、これらの関数が返す内容を解釈するための定数や関数を定義しています。
#
os.stat(path, *, dir_fd=None, follow_symlinks=True)
ファイルまたはファイル記述子についての状態を取得します。与えられた path に対して stat() システムコール相当の処理を実行します。
##
os.lstat(path, *, dir_fd=None)
与えられたパスに対して lstat() システムコールと同じ処理を行います。stat() と似ていますが、シンボリックリンクをたどりません。
###
os.fstat(fd)
ファイル記述子 fd の状態を取得します。stat_result オブジェクトを返します。

* 特殊なファイル型を判別するために使用。　

８．stat.S_ISDIR(mode)：ファイルのモードがディレクトリの場合にゼロでない値を返します。
　　stat.S_ISCHR(mode)：ファイルのモードがキャラクタ型の特殊デバイスファイルの場合にゼロでない値を返します。
　　stat.S_ISREG(mode)：ファイルのモードが通常ファイルの場合にゼロでない値を返します。
　　stat.S_ISWHT(mode)：ファイルのモードがホワイトアウトの場合にゼロでない値を返します

*　上記の続き。コマンドリスト。

９．math -　数学関数
関数を提供しています。明示的な注記のない限り、戻り値は全て浮動小数点数になります。
math.ceil(x)：x の「天井」 (x 以上の最小の整数) を返します。
math.fabs(x)：x の絶対値を返します。
math.factorial(x)：x の階乗を返します。

* 関数の代入として使用される。　今後いろいろ必要とされます。きっと。

10.datetime - 基本的な日付型および時間型。
日付や時間データを簡単な方法と複雑な方法の両方で操作するためのクラスを提供しています。
“naive” と “aware” の2種類の日付と時刻オブジェクトがあり、
aware オブジェクトとの相対関係を把握出来るように、タイムゾーンや夏時間の情報のような、
アルゴリズム的で政治的な適用可能な時間調節に関する知識を持っています。

* 時間を表すときに使用される。　時刻表ですね。
"""